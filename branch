#!/usr/bin/env ruby
require 'optparse'

class String
  # colorization
  def colorize(color_code)
    "\e[#{color_code}m#{self}\e[0m"
  end

  def yellow
    colorize(33)
  end
end

def colorize (line, search)
    line.gsub(search, search.yellow)
end


options = {}
OptionParser.new do |opts|
  opts.banner = "Usage: branch branch-name [options]"

  opts.on("--remote", "Include remote branches") do |r|
    options[:remote] = r
  end
  opts.on("--pull", "Pull after checking out") do |r|
    options[:pull] = r
  end
end.parse(ARGV)


search = ARGV[0].dup << ".*"
search_raw = ARGV[0]
lines = if options[:remote]
  `git branch -a | grep -e "#{search}" -i --color`.split("\n")
else
  `git branch | grep -e "#{search}" -i --color`.split("\n")
end

unless lines.size > 0
  puts "No matching branches!"
  exit
end

lines.each do |line|
  line.sub! "*", ""
  line.strip!
end

if lines.size > 1 
  lines.each_with_index do |line, index|  
    puts index.to_s + " - " + colorize(line, search_raw)
  end
  puts "q to quit"
  print "Which branch: "
  the_index = STDIN.gets.chomp
  exit if the_index == 'q'
  the_branch = lines[the_index.to_i]
  the_branch.gsub!("remotes/origin/", "")
  `git checkout #{the_branch}`
else
  the_branch = lines[0]
  the_branch.gsub!("remotes/origin/", "")
  `git checkout #{the_branch}`
end

if options[:pull]
  `git pull`
end



