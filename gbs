#!/usr/bin/env ruby
#
# search git branches by pattern (grep) and switch (checkout)
#
# borrowed from https://github.com/dstarh/git-utils/blob/master/branch
#
class String
  # colorization
  def colorize(color_code)
    "\e[#{color_code}m#{self}\e[0m"
  end

  def yellow
    colorize(33)
  end
end

def colorize (line, search)
	split = line.split(search)
	colorized = ""
	size = split.size
	split.each_with_index do |section, index|
		colorized << section 
		colorized << search.yellow if index + 1 < size
	end
	colorized
	
end


search = ARGV[0].dup << ".*"
search_raw = ARGV[0]
lines = if ARGV[1] == "--remote"
	`git branch -a | grep -e "#{search}" -i --color`.split("\n")
else
	`git branch | grep -e "#{search}" -i --color`.split("\n")
end

unless lines.size > 0
	puts "No matching branches!"
	exit
end

lines.each do |line|
	line.sub! "*", ""
	line.strip!
end

lines.each_with_index do |line, index|	
	puts index.to_s.rjust(3) + " - " + colorize(line, search_raw)
end
puts "q to quit"
print "Which branch: "
the_index = STDIN.gets.chomp
exit if the_index == 'q'
the_branch = lines[the_index.to_i]
the_branch.gsub!("remotes/origin/", "")
`git checkout #{the_branch}`